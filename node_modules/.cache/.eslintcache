[{"/Users/nala/Documents/Coding Projects/nature-walks/src/index.tsx":"1","/Users/nala/Documents/Coding Projects/nature-walks/src/reportWebVitals.ts":"2","/Users/nala/Documents/Coding Projects/nature-walks/src/App.tsx":"3","/Users/nala/Documents/Coding Projects/nature-walks/src/components/UI/Button.tsx":"4","/Users/nala/Documents/Coding Projects/nature-walks/src/components/layout/Header.tsx":"5","/Users/nala/Documents/Coding Projects/nature-walks/src/components/layout/Services.tsx":"6","/Users/nala/Documents/Coding Projects/nature-walks/src/components/layout/Testimonials.tsx":"7","/Users/nala/Documents/Coding Projects/nature-walks/src/components/UI/Card.tsx":"8","/Users/nala/Documents/Coding Projects/nature-walks/src/components/layout/Highlights.tsx":"9","/Users/nala/Documents/Coding Projects/nature-walks/src/components/layout/HowItWorks.tsx":"10","/Users/nala/Documents/Coding Projects/nature-walks/src/components/layout/Calculator.tsx":"11"},{"size":203,"mtime":1652904153342,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1652800724063,"results":"14","hashOfConfig":"13"},{"size":555,"mtime":1653406703603,"results":"15","hashOfConfig":"13"},{"size":228,"mtime":1652907754715,"results":"16","hashOfConfig":"13"},{"size":728,"mtime":1653411517539,"results":"17","hashOfConfig":"13"},{"size":1099,"mtime":1653449276380,"results":"18","hashOfConfig":"13"},{"size":2096,"mtime":1653412797546,"results":"19","hashOfConfig":"13"},{"size":221,"mtime":1652912782403,"results":"20","hashOfConfig":"13"},{"size":857,"mtime":1653410679123,"results":"21","hashOfConfig":"13"},{"size":826,"mtime":1653335380160,"results":"22","hashOfConfig":"13"},{"size":3828,"mtime":1653451218177,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1rp3g2c",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"/Users/nala/Documents/Coding Projects/nature-walks/src/index.tsx",[],[],[],"/Users/nala/Documents/Coding Projects/nature-walks/src/reportWebVitals.ts",[],[],"/Users/nala/Documents/Coding Projects/nature-walks/src/App.tsx",[],[],[],"/Users/nala/Documents/Coding Projects/nature-walks/src/components/UI/Button.tsx",[],[],"/Users/nala/Documents/Coding Projects/nature-walks/src/components/layout/Header.tsx",[],[],"/Users/nala/Documents/Coding Projects/nature-walks/src/components/layout/Services.tsx",[],[],"/Users/nala/Documents/Coding Projects/nature-walks/src/components/layout/Testimonials.tsx",[],[],"/Users/nala/Documents/Coding Projects/nature-walks/src/components/UI/Card.tsx",[],[],"/Users/nala/Documents/Coding Projects/nature-walks/src/components/layout/Highlights.tsx",[],[],"/Users/nala/Documents/Coding Projects/nature-walks/src/components/layout/HowItWorks.tsx",[],[],"/Users/nala/Documents/Coding Projects/nature-walks/src/components/layout/Calculator.tsx",["60"],[],"import React, { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport \"./Calculator.scss\";\nimport Button from \"../UI/Button\";\n\nimport bitcoin from \"../../images/icons/bitcoin.png\";\nimport eth from \"../../images/icons/eth.svg\";\nimport solana from \"../../images/icons/solana.png\";\nimport cardano from \"../../images/icons/cardano.png\";\nimport usdc from \"../../images/icons/usdc.png\";\nimport { clickOptions } from \"@testing-library/user-event/dist/click\";\n\n//useState staking vs borrowing show relevant calculator\nconst Calculator = () => {\n  const [calcType, setCalcType] = useState(\"staking\");\n\n  let inactiveCalcType;\n  if (calcType === \"staking\") {\n    inactiveCalcType = \"Borrow\";\n  } else {\n    inactiveCalcType = \"Staking\";\n  }\n\n  const calcButtonToggle = () => {\n    calcType === \"staking\" ? setCalcType(\"borrow\") : setCalcType(\"staking\");\n  };\n\n  const cryptoSelector = (\n    <div className=\"crypto-icons\">\n      <img src={bitcoin} alt=\"bitcon token\" className=\"crypto-icons-active\" />\n      <img src={eth} alt=\"eth token\" />\n      <img src={solana} alt=\"solana token\" />\n      <img src={cardano} alt=\"cardano token\" />\n      <img src={usdc} alt=\"cardano token\" />\n    </div>\n  );\n\n  const stakeCalc = (\n    <div className=\"calc-form\">\n      <h3>Select Your Crypto</h3>\n      <h4>Bitcoin</h4>\n      {cryptoSelector}\n      <form action=\"\">\n        <label htmlFor=\"\">\n          <h3>Quantity Staked</h3>\n        </label>\n        <input type=\"number\" placeholder=\"0.00\" />\n      </form>\n      <div>\n        <h3>Months</h3>\n        <div className=\"calc-form__month-selector\">\n          <div className=\"calc-form__month-selector-item\">1 Month</div>\n          <div className=\"calc-form__month-selector-item\">6 Months</div>\n          <div className=\"calc-form__month-selector-item active\">12 Months</div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const borrowCalc = (\n    <div className=\"calc__borrow\">\n      <h3>Select Your Crypto</h3>\n      <form action=\"\" className=\"calc__borrow-form\">\n        <label htmlFor=\"\">Quantity</label>\n        <input type=\"text\" />\n        <label htmlFor=\"\">Yield</label>\n        <input type=\"text\" />\n        <label htmlFor=\"\">Months</label>\n        <input type=\"text\" />\n        <label htmlFor=\"\">Earned</label>\n        <input type=\"text\" />\n      </form>\n    </div>\n  );\n\n  return (\n    <Card className=\"dark-blue\">\n      <div id=\"calculator\">\n        <h1>Yield Calculator</h1>\n        <Card className=\"white calc-box\">\n          <div className=\"calc-left\">\n            <div className=\"calc-left-heading\">\n              <div className=\"calc-left-heading-active\">Staking</div>\n              <div onClick={calcButtonToggle}>\n                <Button className=\"calc-left-heading-inactive btn-pink\">\n                  Check {inactiveCalcType} Rates\n                </Button>\n              </div>\n            </div>\n            {calcType === \"staking\" && stakeCalc}\n            {calcType === \"borrow\" && borrowCalc}\n          </div>\n          <div className=\"calc-right\">\n            <div className=\"total-yield-box\">\n              <h3>Total Yield</h3>\n              <div className=\"total-yield-box__value\">$1,200.00</div>\n              <div className=\"total-yield-box__gain\">3.00% Gain</div>\n            </div>\n            <div className=\"yield-box\">\n              <div className=\"yield-box-inner\">\n                <div>Monthly Yield</div>\n                <div className=\"yield-box__value\">$100.00</div>\n                <div>0.05% APR</div>\n              </div>\n              <div className=\"yield-box-inner\">\n                <div>Annual Yield</div>\n                <div className=\"yield-box__value\">$1200.00</div>\n                <div>3.00% APY</div>\n              </div>\n            </div>\n          </div>\n        </Card>\n      </div>\n    </Card>\n  );\n};\n\nexport default Calculator;\n",{"ruleId":"61","severity":1,"message":"62","line":12,"column":10,"nodeType":"63","messageId":"64","endLine":12,"endColumn":22},"@typescript-eslint/no-unused-vars","'clickOptions' is defined but never used.","Identifier","unusedVar"]